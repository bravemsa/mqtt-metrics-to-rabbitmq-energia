services:
  brokerserver:
    container_name: broker_container
    image: "rabbitmq:3-management-alpine"
    hostname: "my-rabbit"
    volumes:
      - ./config/rabbitmq/default-definitions.conf:/etc/rabbitmq/conf.d/rabbitmq.conf:ro
      - ./config/rabbitmq/mqtt.conf:/etc/rabbitmq/conf.d/20-mqtt.conf:ro
      - ./config/rabbitmq/enabled-plugins:/etc/rabbitmq/enabled_plugins:ro
      - ./config/rabbitmq/definitions.json:/etc/rabbitmq/conf.d/definitions.json:ro
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 100s
      timeout: 10s
      retries: 5
    ports:
      - "1883:1883"
      - "127.0.0.1:8081:15672"
    networks:
      - backend_space

  timeseriesserver:
    container_name: timeseries_container
    image: "influxdb:2.7.4"
    env_file:
      - ./config/docker/influxdb/docker-env-vars
    ports:
      - "127.0.0.1:8086:8086"
    networks:
      - backend_space
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8086/ping"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  chartingserver:
    container_name: charting_container
    image: "grafana/grafana:10.4.2"
    volumes:
      - ./volumes/grafana-storage:/var/lib/grafana
    ports:
      - "80:3000"
    depends_on:
      timeseriesserver:
        condition: service_healthy
    networks:
      - backend_space
  
  energy_connector:
    image: "pabloandresd/broker-consumer:002"
    volumes:
      - ./config/docker/BrokerConsumer/energy-connector-settings.json:/publish/appsettings.json:ro
      - ./docs/example-of-device-info-file.csv:/var/device-metrics-processor/device-info.csv:ro
    depends_on:
      brokerserver:
        condition: service_healthy
      timeseriesserver:
        condition: service_started
    networks:
      - backend_space

networks:
  backend_space:
    name: backend_network
    driver: bridge